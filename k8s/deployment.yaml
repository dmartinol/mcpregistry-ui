---
# Deployment for ToolHive Registry UI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: toolhive-registry-ui
  namespace: toolhive-system
  labels:
    app.kubernetes.io/name: toolhive-registry-ui
    app.kubernetes.io/component: ui
    app.kubernetes.io/part-of: toolhive
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: toolhive-registry-ui
      app.kubernetes.io/component: ui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: toolhive-registry-ui
        app.kubernetes.io/component: ui
        app.kubernetes.io/part-of: toolhive
        app.kubernetes.io/version: "1.0.0"
      annotations:
        # Force restart when ConfigMap or Secret changes
        checksum/config: "placeholder-for-config-hash"
        checksum/secret: "placeholder-for-secret-hash"
    spec:
      serviceAccountName: toolhive-registry-ui
      containers:
      - name: registry-ui
        image: docker.io/toolhive/registry-ui:latest  # Replace with your actual image
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP

        # Environment variables from ConfigMap and Secret
        envFrom:
        - configMapRef:
            name: toolhive-registry-ui-config
        - secretRef:
            name: toolhive-registry-ui-secrets
            optional: true

        # Additional environment variables
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName

        # Resource limits and requests
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi

        # Health checks
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
        startupProbe:
          httpGet:
            path: /api/health
            port: http

        # Volume mounts for temporary files
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/.cache

      # Volumes for temporary files
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}

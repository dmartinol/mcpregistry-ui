---
# Ingress for ToolHive Registry UI - NGINX Ingress Controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: toolhive-registry-ui
  namespace: toolhive-system
  labels:
    app.kubernetes.io/name: toolhive-registry-ui
    app.kubernetes.io/component: ui
    app.kubernetes.io/part-of: toolhive
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # Enable CORS for API endpoints
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization, X-Requested-With"

    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"

    # Security headers
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   more_set_headers "X-Frame-Options: DENY";
    #   more_set_headers "X-Content-Type-Options: nosniff";
    #   more_set_headers "X-XSS-Protection: 1; mode=block";
    #   more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";

    # Body size for file uploads if needed
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"

    # Load balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"

    # Certificate manager annotation (if using cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  # Ingress class (adjust based on your ingress controller)
  ingressClassName: nginx

  # TLS configuration
  tls:
  - hosts:
    - registry.toolhive.local  # Replace with your actual domain
    secretName: toolhive-registry-ui-tls

  rules:
  - host: registry.toolhive.local  # Replace with your actual domain
    http:
      paths:
      # API routes
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: toolhive-registry-ui
            port:
              number: 80

      # Frontend routes (catch-all for React Router)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: toolhive-registry-ui
            port:
              number: 80

---
# Alternative: Traefik Ingress (uncomment if using Traefik)
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: toolhive-registry-ui-traefik
#   namespace: toolhive-system
#   labels:
#     app.kubernetes.io/name: toolhive-registry-ui
#     app.kubernetes.io/component: ui
#     app.kubernetes.io/part-of: toolhive
#   annotations:
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
#     traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
# spec:
#   ingressClassName: traefik
#   tls:
#   - hosts:
#     - registry.toolhive.local
#     secretName: toolhive-registry-ui-tls
#   rules:
#   - host: registry.toolhive.local
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: toolhive-registry-ui
#             port:
#               number: 80

---
# IngressRoute for Traefik v2+ (CRD-based routing)
# Uncomment if using Traefik with CRDs
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: toolhive-registry-ui
#   namespace: toolhive-system
#   labels:
#     app.kubernetes.io/name: toolhive-registry-ui
#     app.kubernetes.io/component: ui
#     app.kubernetes.io/part-of: toolhive
# spec:
#   entryPoints:
#   - websecure
#   routes:
#   - match: Host(`registry.toolhive.local`)
#     kind: Rule
#     services:
#     - name: toolhive-registry-ui
#       port: 80
#   tls:
#     certResolver: letsencrypt

---
# NetworkPolicy to secure ingress traffic (optional)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: toolhive-registry-ui-ingress
  namespace: toolhive-system
  labels:
    app.kubernetes.io/name: toolhive-registry-ui
    app.kubernetes.io/component: ui
    app.kubernetes.io/part-of: toolhive
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: toolhive-registry-ui
      app.kubernetes.io/component: ui
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx  # Adjust based on your ingress namespace
    ports:
    - protocol: TCP
      port: 3000
  # Allow traffic from within the same namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: toolhive-system
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow HTTPS to external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP to cluster services
  - to:
    - namespaceSelector:
        matchLabels:
          name: toolhive-system
    ports:
    - protocol: TCP
      port: 8080
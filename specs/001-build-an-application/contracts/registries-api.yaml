openapi: 3.0.3
info:
  title: ToolHive Registry Management API - Registries
  version: 1.0.0
  description: API for managing ToolHive registries

paths:
  /api/v1/registries:
    get:
      summary: List all registries
      description: Retrieve a list of all managed registries with status and metadata
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, error, syncing]
          description: Filter by registry status
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of registries
          content:
            application/json:
              schema:
                type: object
                properties:
                  registries:
                    type: array
                    items:
                      $ref: '#/components/schemas/Registry'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      summary: Create new registry
      description: Register a new ToolHive registry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegistryRequest'
      responses:
        '201':
          description: Registry created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Registry already exists
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/registries/{registryId}:
    get:
      summary: Get registry details
      description: Retrieve detailed information about a specific registry
      parameters:
        - name: registryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Registry details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryDetails'
        '404':
          description: Registry not found
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      summary: Update registry
      description: Update registry configuration
      parameters:
        - name: registryId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegistryRequest'
      responses:
        '200':
          description: Registry updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Registry not found
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      summary: Delete registry
      description: Remove a registry and all associated data
      parameters:
        - name: registryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Registry deleted successfully
        '404':
          description: Registry not found
        '409':
          description: Cannot delete registry with active instances
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/registries/{registryId}/sync:
    post:
      summary: Sync registry
      description: Trigger synchronization of registry server data
      parameters:
        - name: registryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Sync initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  syncId:
                    type: string
                  status:
                    type: string
                    enum: [initiated]
        '404':
          description: Registry not found
        '409':
          description: Sync already in progress
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    Registry:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
          format: uri
        description:
          type: string
        status:
          type: string
          enum: [active, inactive, error, syncing]
        serverCount:
          type: integer
        lastSyncAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - url
        - status

    RegistryDetails:
      allOf:
        - $ref: '#/components/schemas/Registry'
        - type: object
          properties:
            metadata:
              type: object
            authConfig:
              type: object
              properties:
                type:
                  type: string
                  enum: [none, basic, bearer, oauth]
            syncHistory:
              type: array
              items:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                  status:
                    type: string
                    enum: [success, error]
                  message:
                    type: string

    CreateRegistryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '^[a-zA-Z0-9-]+$'
        url:
          type: string
          format: uri
        description:
          type: string
          maxLength: 500
        authConfig:
          type: object
      required:
        - name
        - url

    UpdateRegistryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '^[a-zA-Z0-9-]+$'
        description:
          type: string
          maxLength: 500
        authConfig:
          type: object

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              details:
                type: array
                items:
                  type: string

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string